---
### Configure generic [ ALL ] nodes
- hosts: all

  vars_files:
    - k8s_components.yml

  become_user: root
  become_method: sudo
  become: yes

  roles:
    - docker
    - k8s_node

#### Configure K8s master node - root part I
- hosts: k8sm

  become_user: root
  become_method: sudo
  become: yes

  vars_files:
    - k8s_components.yml

  tasks:
    - name: CNI - directory
      file:
        path: /opt/cni/bin
        state: directory

    - name: CNI - get package
      get_url:
        url: https://github.com/containernetworking/plugins/releases/download/{{CNI_VERSION}}/cni-plugins-amd64-{{CNI_VERSION}}.tgz
        dest: /tmp/cni-plugins-amd64-{{CNI_VERSION}}.tgz

    - name: CNI - extract
      unarchive:
        src: /tmp/cni-plugins-amd64-{{CNI_VERSION}}.tgz
        dest: /opt/cni/bin/
        remote_src: yes
        creates: /opt/cni/bin/bridge

    - name: CRICTL - directory
      file:
        path: /opt/bin
        state: directory

    - name: CRICTL - get package
      get_url:
        url: https://github.com/kubernetes-sigs/cri-tools/releases/download/{{CRICTL_VERSION}}/crictl-{{CRICTL_VERSION}}-linux-amd64.tar.gz
        dest: /tmp/crictl-{{CRICTL_VERSION}}-linux-amd64.tar.gz

    - name: CRICTL - extract
      unarchive:
        src: /tmp/crictl-{{CRICTL_VERSION}}-linux-amd64.tar.gz
        dest: /opt/bin/
        remote_src: yes
        creates: /opt/bin/crictl

    - name: K8s init
      command: kubeadm init
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadminit

      
### Master node - non-privileged
- hosts: k8sm

  become: no

  vars_files:
    - k8s_components.yml

  tasks:
    - name: Create kube folder
      file:
        path: ${HOME}/.kube
        state: directory

    - name: Copy kube config
      become: yes
      copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: /home/centos/.kube/config

    - name: fix permissions
      become: yes
      file:
        path: /home/centos/.kube
        group: centos
        owner: centos
        recurse: yes

    - name: Get Kubectl version
      become: no
      shell: |
              kubectl version | base64 -w0
      register: kubectl_version

    - name: Weave Net install
      become: no
      shell: |
              kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version={{ kubectl_version.stdout }}"
      when: kubectl_version.changed

### Master node - root part II
- hosts: k8sm

  become: yes
  become_user: root
  become_method: sudo

  tasks:
    - name: Create join token
      shell: |
              kubeadm token create --print-join-command
      register: join_command

    - name: Print join command
      command: "wall '{{ join_command.stdout }}'"
      when: join_command.changed
